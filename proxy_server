Explanation
ProxyServer.cs: This file contains the ProxyServer class that listens for incoming connections on a specified port and forwards the data between the client and the destination server.
Client.cs: This file contains the Client class, which has methods for sending and receiving images through the proxy server.
Program.cs: This file contains the Main method where the proxy server is started and the client sends and receives an image.
To run the code:

Start the proxy server by running Program.cs.
The client will send and receive an image via the proxy server.
Make sure to replace "destination-server.com" in ProxyServer.cs with the actual destination server address and adjust the ports as needed. Also, update the file paths in Program.cs to the actual paths of the images you want to send and receive.

==============================================================================
using System;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Threading.Tasks;

public class ProxyServer
{
    private readonly int _port;

    public ProxyServer(int port)
    {
        _port = port;
    }

    public async Task StartAsync()
    {
        TcpListener listener = new TcpListener(IPAddress.Any, _port);
        listener.Start();
        Console.WriteLine($"Proxy server started on port {_port}");

        while (true)
        {
            TcpClient client = await listener.AcceptTcpClientAsync();
            _ = Task.Run(() => HandleClientAsync(client));
        }
    }

    private async Task HandleClientAsync(TcpClient client)
    {
        NetworkStream clientStream = client.GetStream();
        using (TcpClient serverClient = new TcpClient("destination-server.com", 8080))
        {
            NetworkStream serverStream = serverClient.GetStream();

            Task clientToServer = clientStream.CopyToAsync(serverStream);
            Task serverToClient = serverStream.CopyToAsync(clientStream);

            await Task.WhenAll(clientToServer, serverToClient);
        }

        client.Close();
    }
}

==============================================================================
using System;
using System.IO;
using System.Net.Sockets;
using System.Threading.Tasks;

public class Client
{
    public async Task SendImageAsync(string filePath, string proxyAddress, int proxyPort)
    {
        using (TcpClient client = new TcpClient(proxyAddress, proxyPort))
        {
            NetworkStream stream = client.GetStream();
            using (FileStream fs = new FileStream(filePath, FileMode.Open, FileAccess.Read))
            {
                await fs.CopyToAsync(stream);
            }
        }
    }

    public async Task ReceiveImageAsync(string savePath, string proxyAddress, int proxyPort)
    {
        using (TcpClient client = new TcpClient(proxyAddress, proxyPort))
        {
            NetworkStream stream = client.GetStream();
            using (FileStream fs = new FileStream(savePath, FileMode.Create, FileAccess.Write))
            {
                await stream.CopyToAsync(fs);
            }
        }
    }
}

==============================================================================
using System;
using System.Threading.Tasks;

public class Program
{
    public static async Task Main(string[] args)
    {
        int proxyPort = 8888;

        ProxyServer proxyServer = new ProxyServer(proxyPort);
        _ = Task.Run(() => proxyServer.StartAsync());

        Client client = new Client();
        string imagePathToSend = "path/to/image.jpg";
        string imagePathToReceive = "path/to/received_image.jpg";

        await client.SendImageAsync(imagePathToSend, "localhost", proxyPort);
        await client.ReceiveImageAsync(imagePathToReceive, "localhost", proxyPort);
    }
}
